model Shard {
  id   String @id @default(uuid()) @map("id")
  slug String @unique @map("slug")

  languageCode String   @map("language_code")
  language     Language @relation(fields: [languageCode], references: [code])

  publishedAt DateTime? @map("published_at")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @default(now()) @updatedAt @map("updated_at")

  author   Account? @relation(fields: [authorId], references: [id], onDelete: SetNull)
  authorId String?  @map("author_id")

  title            String  @map("title")
  shortDescription String? @map("short_description")
  contentJSON      Json?   @map("content_json")
  seoTitle         String? @map("seo_title")
  seoDescription   String? @map("seo_description")
  seoKeywords      String? @map("seo_keywords")

  tags ShardTag[]

  entryId String     @map("entry_id")
  entry   ShardEntry @relation(fields: [entryId], references: [id], onDelete: Cascade)

  @@map("shards")
}

model ShardTag {
  shardId String @map("shard_id")
  shard   Shard  @relation(fields: [shardId], references: [id], onDelete: Cascade)

  tagId String @map("tag_id")
  tag   Tag    @relation(fields: [tagId], references: [id], onDelete: Cascade)

  order Int @map("order")

  @@id([shardId, tagId])
  @@unique([shardId, order])
  @@map("shard_tags")
}

model ShardEntry {
  id String @id @default(uuid()) @map("id")

  publishedAt DateTime? @map("published_at")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @default(now()) @updatedAt @map("updated_at")

  author   Account? @relation(fields: [authorId], references: [id], onDelete: SetNull)
  authorId String?  @map("author_id")

  shards Shard[]

  @@map("shard_entries")
}
